{"version":3,"sources":["lsx-blog-customizer.scss","_include-media.scss","_customizer-blog-body-colours.scss","_customizer-blog-banner-colours.scss"],"names":[],"mappings":"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","file":"../lsx-blog-customizer.css","sourcesContent":["/*\n * lsx-blog-customizer.css\n */\n\n@import 'include-media';\n@import 'customizer-blog-body-colours';\n@import 'customizer-blog-banner-colours';\n\n.widget.lsx-blog-customizer-posts {\n\t.tagline {\n\t\t& + .lsx-blog-customizer-posts-wrapper {\n\t\t\tmargin-top: 0;\n\t\t}\n\t\t& + .lsx-blog-customizer-posts-slider {\n\t\t\tmargin-top: 0;\n\t\t}\n\t}\n\n\t.lsx-blog-customizer-posts-archive-link-wrap {\n\t\tposition: relative;\n\t\tmargin-top: 6rem;\n\t\toverflow: hidden;\n\t}\n\n\t.lsx-blog-customizer-posts-archive-link {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\n\t\t&:before,\n\t\t&:after {\n\t\t\tcontent: '';\n\t\t\tdisplay: block;\n\t\t\theight: 2px;\n\t\t\tposition: absolute;\n\t\t\ttop: 50%;\n\t\t\ttransform: translateY(-50%);\n\t\t\twidth: 999rem;\n\t\t}\n\n\t\t&:before {\n\t\t\tright: 120%;\n\t\t}\n\n\t\t&:after {\n\t\t\tleft: 120%;\n\t\t}\n\t}\n}\n\n.widget.lsx-blog-customizer-terms {\n\t.tagline {\n\t\t& + .lsx-blog-customizer-terms-wrapper {\n\t\t\tmargin-top: 0;\n\t\t}\n\t\t& + .lsx-blog-customizer-terms-slider {\n\t\t\tmargin-top: 0;\n\t\t}\n\t}\n\n\t.lsx-blog-customizer-terms-archive-link-wrap {\n\t\tposition: relative;\n\t\tmargin-top: 6rem;\n\t\toverflow: hidden;\n\t}\n\n\t.lsx-blog-customizer-terms-archive-link {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\n\t\t&:before,\n\t\t&:after {\n\t\t\tcontent: '';\n\t\t\tdisplay: block;\n\t\t\theight: 2px;\n\t\t\tposition: absolute;\n\t\t\ttop: 50%;\n\t\t\ttransform: translateY(-50%);\n\t\t\twidth: 999rem;\n\t\t}\n\n\t\t&:before {\n\t\t\tright: 120%;\n\t\t}\n\n\t\t&:after {\n\t\t\tleft: 120%;\n\t\t}\n\t}\n}\n\n.lsx-blog-customizer-posts-wrapper {\n\tmargin-top: -4rem;\n\n\t.post-slot {\n\t\tmargin-top: 4rem;\n\t\tpadding-bottom: 2.4rem;\n\t\tbackground-color: #fff;\n\n\t\t&.slick-slide {\n\t\t\tmargin-left: 15px;\n\t\t\tmargin-right: 15px;\n\t\t}\n\n\t\t.post-image {\n\t\t\tmax-height: 150px;\n\t\t\toverflow: hidden;\n\n\t\t\timg {\n\t\t\t\twidth: 100%;\n\n\t\t\t\t&.lazyload,\n\t\t\t\t&.lazyloading {\n\t\t\t\t\twidth: auto;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t& + .post-info {\n\t\t\t\tmargin-top: 30px;\n\n\t\t\t\t.post-avatar {\n\t\t\t\t\tleft: 50%;\n\t\t\t\t\tmargin: 0;\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: -80px;\n\t\t\t\t\ttransform: translateX(-50%);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.post-info {\n\t\t\tdisplay: block;\n\t\t\tfont-size: 13px;\n\t\t\tmargin-bottom: 2.4rem;\n\t\t\tpadding-left: 15px;\n\t\t\tpadding-right: 15px;\n\t\t\tposition: relative;\n\t\t\t.post-meta-info {\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t}\n\n\t\t.post-avatar {\n\t\t\tbackground-color: #fff;\n\t\t\tborder: 2px solid #fff;\n\t\t\tborder-radius: 50%;\n\t\t\tdisplay: block;\n\t\t\theight: 75px;\n\t\t\tmargin: 0 auto 5px;\n\t\t\toverflow: hidden;\n\t\t\ttransition: border 300ms ease;\n\t\t\twidth: 75px;\n\t\t}\n\n\t\t.post-title {\n\t\t\t// padding-left: 2.4rem;\n\t\t\t// padding-right: 2.4rem;\n\t\t\tmargin-bottom: 10px;\n\t\t}\n\n\t\t.moretag {\n\t\t\ttext-transform: uppercase;\n\t\t\t&:after {\n\t\t\t\tcontent: '\\f178';\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tfont-family: 'FontAwesome';\n\t\t\t\tfont-size: inherit;\n\t\t\t\tmargin-left: 5px;\n\t\t\t\ttext-rendering: auto;\n\n\t\t\t\t-webkit-font-smoothing: antialiased;\n\t\t\t\t-moz-osx-font-smoothing: grayscale;\n\t\t\t}\n\t\t}\n\n\t\t.post-content {\n\t\t\tpadding-left: 15px;\n\t\t\tpadding-right: 15px;\n\n\t\t\tblockquote {\n\t\t\t\tmax-width: none;\n\t\t\t}\n\t\t}\n\n\t\t.post-meta {\n\t\t\tfont-size: 13px;\n\t\t\tmargin-top: 15px;\n\t\t\tpadding-left: 15px;\n\t\t\tpadding-right: 15px;\n\t\t\tposition: relative;\n\t\t}\n\n\t\t.post-categories {\n\t\t\tdisplay: inline;\n\t\t}\n\n\t\t.post-tags {\n\t\t\tborder-top: 2px solid #d8d8d8;\n\t\t\tfont-style: italic;\n\t\t\tpadding-top: 10px;\n\t\t\tdisplay: block;\n\t\t\t// &:before {\n\t\t\t// \tcontent: '\\f111';\n\t\t\t// \tdisplay: inline-block;\n\t\t\t// \tfont-family: 'FontAwesome';\n\t\t\t// \tfont-size: 5px;\n\t\t\t// \tmargin: 0 10px;\n\t\t\t// \ttext-rendering: auto;\n\t\t\t// \tvertical-align: middle;\n\n\t\t\t// \t-webkit-font-smoothing: antialiased;\n\t\t\t// \t-moz-osx-font-smoothing: grayscale;\n\t\t\t// }\n\n\t\t\t& > a {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tmargin-right: 5px;\n\n\t\t\t\t&:before {\n\t\t\t\t\tcontent: '#';\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t}\n\n\t\t\t\t&:last-child,\n\t\t\t\t&:only-child {\n\t\t\t\t\tmargin-right: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n.lsx-blog-customizer-terms-wrapper {\n\tmargin-top: -4rem;\n\n\t.term-slot {\n\t\tmargin-top: 4rem;\n\n\t\t&.slick-slide {\n\t\t\tmargin-left: 15px;\n\t\t\tmargin-right: 15px;\n\t\t}\n\n\t\t.term-image {\n\t\t\tmax-height: 150px;\n\t\t\toverflow: hidden;\n\n\t\t\timg {\n\t\t\t\twidth: 100%;\n\n\t\t\t\t&.lazyload,\n\t\t\t\t&.lazyloading {\n\t\t\t\t\twidth: auto;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.term-title {\n\t\t\ttext-align: center;\n\t\t}\n\n\t\t.moretag {\n\t\t\tdisplay: block;\n\t\t\tmargin: 0 -2rem;\n\t\t\tpadding: 1rem 0;\n\t\t\ttext-align: center;\n\t\t\ttransition: background 300ms ease;\n\n\t\t\t&:after {\n\t\t\t\tcolor: inherit;\n\t\t\t\tcontent: '\\f178';\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tfont-family: 'FontAwesome';\n\t\t\t\tfont-size: inherit;\n\t\t\t\tmargin-left: 5px;\n\t\t\t\ttext-rendering: auto;\n\n\t\t\t\t-webkit-font-smoothing: antialiased;\n\t\t\t\t-moz-osx-font-smoothing: grayscale;\n\t\t\t}\n\t\t}\n\n\t\t.term-content {\n\t\t\tbackground-color: #fff;\n\t\t\tpadding: 2.4rem 2rem 0;\n\t\t}\n\t}\n}\n\n#home-widgets {\n\t.post-content {\n\t\t& > p + p {\n\t\t\tmargin-top: 1rem;\n\t\t}\n\t}\n}\n\n#categories-slider,\n.lsx-blog-customizer-posts-slider,\n.lsx-blog-customizer-terms-slider,\n.lsx-related-posts-wrapper,\n.lsx-slick-slider {\n\t.slick-dots {\n\t\talign-items: center;\n\t\tdisplay: flex;\n\t\tflex-flow: row wrap;\n\t\theight: auto;\n\t\tjustify-content: center;\n\t\tlist-style: none;\n\t\tmargin: 1rem 0 0;\n\t\tpadding: 0;\n\n\t\t& > li {\n\t\t\tline-height: 1;\n\t\t\tpadding: 5px;\n\n\t\t\t@include media('>=tablet') {\n\t\t\t\tpadding: 0 7.5px;\n\t\t\t}\n\n\t\t\t& > button {\n\t\t\t\tbackground: transparent;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tfont: 0/0 a;\n\t\t\t\theight: 12px;\n\t\t\t\ttransition: all 300ms ease-in-out;\n\t\t\t\twidth: 4rem;\n\n\t\t\t\t@include media('>=tablet') {\n\t\t\t\t\theight: 6px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t.slick-arrow {\n\t\tbackground: transparent;\n\t\tborder-radius: 50%;\n\t\tborder-style: solid;\n\t\tborder-width: 2px;\n\t\tfont: 0/0 a;\n\t\theight: 4rem;\n\t\tmargin-top: calc((2rem - 17px) / 2);\n\t\topacity: 1;\n\t\tpadding: 0;\n\t\tposition: absolute;\n\t\ttext-shadow: none;\n\t\ttop: 50%;\n\t\ttransform: translateY(-50%);\n\t\ttransition: border 300ms ease;\n\t\twidth: 4rem;\n\t\tz-index: 3;\n\n\t\t&:before {\n\t\t\tdisplay: block;\n\t\t\tfont-family: 'FontAwesome';\n\t\t\tfont-size: 3rem;\n\t\t\tline-height: 1;\n\t\t\tposition: absolute;\n\t\t\ttext-rendering: auto;\n\t\t\ttop: 47%;\n\t\t\ttransform: translateY(-50%);\n\t\t\ttransition: color 300ms ease;\n\n\t\t\t-webkit-font-smoothing: antialiased;\n\t\t\t-moz-osx-font-smoothing: grayscale;\n\t\t}\n\n\t\t&.slick-disabled {\n\t\t\tcursor: not-allowed;\n\t\t}\n\n\t\t&.slick-prev {\n\t\t\tleft: -4rem;\n\n\t\t\t&:before {\n\t\t\t\tcontent: '\\f104';\n\t\t\t\tleft: 1.1rem;\n\t\t\t}\n\t\t}\n\n\t\t&.slick-next {\n\t\t\tright: -4rem;\n\n\t\t\t&:before {\n\t\t\t\tcontent: '\\f105';\n\t\t\t\tleft: 1.5rem;\n\t\t\t}\n\t\t}\n\t}\n}\n\n.lsx-blog-customizer-posts-slider,\n.lsx-blog-customizer-terms-slider {\n\t@include media('>=tablet') {\n\t\tmargin: -4rem auto 0;\n\t\twidth: 100%;\n\n\t\t&.slick-has-arrows {\n\t\t\twidth: calc(100% - 8rem);\n\t\t}\n\t}\n\n\t@include media('>=1280px') {\n\t\tmargin-left: -15px;\n\t\tmargin-right: -15px;\n\t\twidth: calc(100% + 30px);\n\n\t\t&.slick-has-arrows {\n\t\t\twidth: calc(100% + 30px);\n\t\t}\n\t}\n\n\t.tab-pane & {\n\t\tmargin-left: -15px;\n\t\tmargin-right: -15px;\n\n\t\t@include media('>=phone') {\n\t\t\tmargin-left: auto;\n\t\t\tmargin-right: auto;\n\t\t\twidth: 100%;\n\n\t\t\t&.slick-has-arrows {\n\t\t\t\twidth: calc(100% - 8rem);\n\t\t\t}\n\t\t}\n\t}\n\n\t.lsx-post-slot.slick-slide {\n\t\tmargin-left: 15px;\n\t\tmargin-right: 15px;\n\t}\n}\n\n#main .categories-slider-title {\n\ttext-transform: uppercase;\n\tfont-weight: 300;\n\tfont-size: 22px;\n\tfont-family: 'Noto Sans', sans-serif;\n\tcolor: #9b9b9b;\n}\n#categories-slider {\n\tmargin-bottom: 8.25rem;\n\n\t@include media('>=tablet') {\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\twidth: 100%;\n\n\t\t&.slick-has-arrows {\n\t\t\twidth: calc(100% - 8rem - 30px);\n\t\t}\n\t}\n\n\t@include media('>=1280px') {\n\t\t&.slick-has-arrows {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n\n\t.blog:not(.lsx-hide-post-author) & {\n\t\tmargin-bottom: 8.5rem;\n\t}\n\n\t.item {\n\t\tbackground-repeat: no-repeat;\n\t\tbackground-position: 50% 50%;\n\t\tbackground-size: cover;\n\t\theight: 100px;\n\t\tposition: relative;\n\n\t\t&:before {\n\t\t\tbackground-color: rgba(55, 71, 80, 0.33);\n\t\t\tbottom: 0;\n\t\t\tcontent: '';\n\t\t\tleft: 0;\n\t\t\tposition: absolute;\n\t\t\tright: 0;\n\t\t\ttop: 0;\n\t\t\tz-index: 2;\n\t\t\ttransition: background 400ms ease-in-out;\n\t\t}\n\n\t\t& > a {\n\t\t\talign-items: center;\n\t\t\tbackground-clip: border-box;\n\t\t\tborder: 5px solid transparent;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\theight: 100%;\n\t\t\tline-height: 1.25;\n\t\t\tposition: relative;\n\t\t\ttext-align: center;\n\t\t\ttransition: border 300ms ease-in-out 100ms;\n\t\t\tz-index: 2;\n\t\t}\n\n\t\t&:hover {\n\t\t\t&:before {\n\t\t\t\tbackground-color: rgba(55, 71, 80, 0.75);\n\t\t\t}\n\n\t\t\t& > a {\n\t\t\t\tborder-color: rgba(#fff, 0.1);\n\t\t\t}\n\t\t}\n\t}\n\n\t.slick-arrow {\n\t\tmargin-top: calc((2rem - 40px) / 2);\n\n\t\t&.slick-prev {\n\t\t\tleft: calc(-4rem - 15px);\n\t\t}\n\n\t\t&.slick-next {\n\t\t\tright: calc(-4rem - 15px);\n\t\t}\n\t}\n}\n\n.lsx-body-full-width:not(.has-sidebar) {\n\t.site-main {\n\t\twidth: 100%;\n\t}\n}\n\n.lsx-body-full-width.single-post {\n\tarticle.post,\n\tarticle.page,\n\tarticle.lsx-slot {\n\t\tmax-width: none;\n\t\twidth: 100%;\n\t}\n}\n\n.lsx-hide-post-date {\n\t.post-meta > .post-meta-time {\n\t\tdisplay: none;\n\t}\n}\n\n.lsx-hide-post-tags {\n\t.post-tags-wrapper {\n\t\tdisplay: none;\n\t}\n}\n\n.lsx-hide-post-author {\n\t.post-meta {\n\t\t& > .post-meta-avatar,\n\t\t& > .post-meta-author {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n.lsx-hide-post-author.lsx-hide-post-date {\n\t&.single-post {\n\t\t// .entry-meta {\n\t\t// \t& > .post-meta.post-meta-top { display: none; }\n\t\t// }\n\n\t\t.archive-title {\n\t\t\tmargin-top: 0;\n\t\t}\n\t}\n\n\t&.blog,\n\t&.archive,\n\t&.search-results {\n\t\t.entry-header {\n\t\t\t.entry-meta {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t}\n}\n\n.lsx-hide-post-category {\n\t& article.lsx-slot,\n\t&.blog,\n\t&.archive,\n\t&.search-results,\n\t&.single-post {\n\t\t.entry-layout .post-tags-wrapper {\n\t\t\tdisplay: none;\n\t\t}\n\t\t.entry-layout .post-tags-wrapper {\n\t\t\t& > .post-meta-categories {\n\t\t\t\tdisplay: none;\n\n\t\t\t\t& + .post-comments:before {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t& > .post-tags:before {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t}\n}\n\n.content-area .blog-description {\n\tmargin-bottom: 4.25rem;\n}\n.blog .content-area {\n\tmargin-top: 4.25rem;\n\tmargin-bottom: 4.25rem;\n}\n\n.lsx-body-list-layout {\n\t&.blog,\n\t&.archive {\n\t\t#categories-slider {\n\t\t\t+ .post-wrapper {\n\t\t\t\tmargin-top: -3.3rem;\n\t\t\t}\n\t\t}\n\t}\n\n\tarticle.post,\n\tarticle.page,\n\tarticle.lsx-slot {\n\t\t.post-meta-avatar {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t.entry-meta,\n\t\t.entry-title,\n\t\t.entry-summary,\n\t\t.entry-content,\n\t\t.post-meta-categories {\n\t\t\tpadding-left: 3rem;\n\t\t\tpadding-right: 3rem;\n\t\t\tword-break: break-word;\n\t\t}\n\t\t.post-tags-wrapper {\n\t\t\tmargin-top: 0;\n\t\t\tmargin-left: 3rem;\n\t\t\tmargin-right: 3rem;\n\t\t\tpadding-top: 10px;\n\t\t\tpadding-right: 0;\n\t\t\tpadding-left: 0;\n\t\t}\n\n\t\t.entry-meta .post-meta,\n\t\t.entry-title,\n\t\t.gallery-item {\n\t\t\ttext-align: left;\n\t\t}\n\n\t\t&:not(.no-thumb) {\n\t\t\t.entry-layout {\n\t\t\t\t@include media('>=phone') {\n\t\t\t\t\talign-items: stretch;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-flow: row nowrap;\n\t\t\t\t\tflex-direction: row-reverse;\n\t\t\t\t\tjustify-content: flex-start;\n\t\t\t\t\tpadding-bottom: 0;\n\n\t\t\t\t\t& > .entry-layout-content {\n\t\t\t\t\t\tflex-grow: 1;\n\t\t\t\t\t\tpadding-bottom: 15px;\n\n\t\t\t\t\t\t.entry-title {\n\t\t\t\t\t\t\tfont-size: 22px;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.entry-image {\n\t\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t& > .entry-image {\n\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t\tflex-basis: 40%;\n\t\t\t\t\t\tflex-shrink: 0;\n\t\t\t\t\t\tposition: relative;\n\n\t\t\t\t\t\t& > .thumbnail {\n\t\t\t\t\t\t\tbackground: no-repeat center center transparent;\n\t\t\t\t\t\t\tbackground-size: cover;\n\t\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t\t\theight: 100%;\n\t\t\t\t\t\t\tleft: 0;\n\t\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\t\ttop: 0;\n\t\t\t\t\t\t\twidth: 100%;\n\n\t\t\t\t\t\t\t& > img {\n\t\t\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t&.no-thumb {\n\t\t\t.label.lsx-label-post-type {\n\t\t\t\tright: 10px;\n\t\t\t\tleft: auto;\n\t\t\t}\n\t\t\t.entry-layout {\n\t\t\t\t@include media('>=phone') {\n\t\t\t\t\t& > .entry-layout-content {\n\t\t\t\t\t\tpadding-bottom: 15px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.entry-title {\n\t\t\tfont-size: 22px;\n\t\t}\n\t}\n}\n\n.lsx-body-grid-layout,\n.lsx-body-half-grid-layout {\n\t&.blog,\n\t&.archive,\n\t&.search-results {\n\t\t#categories-slider {\n\t\t\t+ .post-wrapper {\n\t\t\t\tmargin-top: -6.3rem;\n\t\t\t}\n\t\t}\n\t\t.post-wrapper {\n\t\t\talign-items: flex-start;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: row;\n\t\t\tflex-wrap: wrap;\n\t\t\tjustify-content: flex-start;\n\t\t\t@include media('>=phone') {\n\t\t\t\tmargin-left: -15px;\n\t\t\t\tmargin-right: -15px;\n\t\t\t}\n\n\t\t\t& > .post,\n\t\t\t& > .page,\n\t\t\t& > .lsx-slot {\n\t\t\t\tmargin-top: 30px;\n\t\t\t\twidth: 100%;\n\n\t\t\t\t@include media('>=phone') {\n\t\t\t\t\tpadding-left: 15px;\n\t\t\t\t\tpadding-right: 15px;\n\t\t\t\t\twidth: 50%;\n\t\t\t\t}\n\n\t\t\t\t@include media('>=desktop') {\n\t\t\t\t\twidth: 33.33333%;\n\t\t\t\t}\n\n\t\t\t\t.entry-meta,\n\t\t\t\t.entry-title,\n\t\t\t\t.post-meta-categories,\n\t\t\t\t.entry-summary,\n\t\t\t\t.entry-content {\n\t\t\t\t\tpadding-left: 1.5rem;\n\t\t\t\t\tpadding-right: 1.5rem;\n\t\t\t\t}\n\t\t\t\t.post-tags-wrapper {\n\t\t\t\t\tmargin-left: 1.5rem;\n\t\t\t\t\tmargin-right: 1.5rem;\n\t\t\t\t}\n\t\t\t\t.entry-title {\n\t\t\t\t\tfont-size: 22px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n.lsx-body-grid-layout {\n\t&.tag,\n\t&.archive,\n\t&.search-results {\n\t\t.post-wrapper {\n\t\t\tmargin-top: -30px;\n\t\t}\n\t}\n}\n\n.lsx-body-half-grid-layout {\n\t&.blog,\n\t&.archive,\n\t&.search-results {\n\t\t.post-wrapper {\n\t\t\t& > .post,\n\t\t\t& > .page,\n\t\t\t& > .lsx-slot {\n\t\t\t\t@include media('>=desktop') {\n\t\t\t\t\twidth: 50%;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n.lsx-body-default-layout {\n\t&.blog,\n\t&.archive,\n\t&.search-results {\n\t\t#categories-slider {\n\t\t\t+ .post-wrapper {\n\t\t\t\tmargin-top: -3.3rem;\n\t\t\t}\n\t\t}\n\t\t.post-wrapper {\n\t\t\t& > .post,\n\t\t\t& > .page,\n\t\t\t& > .lsx-slot {\n\t\t\t\t.entry-meta,\n\t\t\t\t.entry-title,\n\t\t\t\t.entry-summary,\n\t\t\t\t.entry-content,\n\t\t\t\t.post-meta-categories {\n\t\t\t\t\tpadding-left: 30px;\n\t\t\t\t\tpadding-right: 30px;\n\t\t\t\t}\n\t\t\t\t.post-tags-wrapper {\n\t\t\t\t\tmargin-left: 30px;\n\t\t\t\t\tmargin-right: 30px;\n\t\t\t\t}\n\t\t\t\t.entry-title {\n\t\t\t\t\tfont-size: 22px;\n\t\t\t\t}\n\t\t\t\t.entry-meta {\n\t\t\t\t\tpadding-top: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t&.lsx-body-full-width {\n\t\t\t.post-wrapper {\n\t\t\t\t& > .post,\n\t\t\t\t& > .page,\n\t\t\t\t& > .lsx-slot {\n\t\t\t\t\t.entry-meta,\n\t\t\t\t\t.entry-title,\n\t\t\t\t\t.entry-summary,\n\t\t\t\t\t.entry-content,\n\t\t\t\t\t.post-meta-categories {\n\t\t\t\t\t\tpadding-left: 30px;\n\t\t\t\t\t\tpadding-right: 30px;\n\t\t\t\t\t}\n\t\t\t\t\t.post-tags-wrapper {\n\t\t\t\t\t\tmargin-left: 30px;\n\t\t\t\t\t\tmargin-right: 30px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n.lsx-layout-switcher {\n\tbottom: 60px;\n\tposition: absolute;\n\tright: 3rem;\n\tz-index: 5;\n\twidth: 140px;\n\ttext-align: center;\n\t@include media('<=phone') {\n\t\tdisplay: none;\n\t}\n}\n.archive.category {\n\t.lsx-layout-switcher {\n\t\t@include media('>=tablet') {\n\t\t\tright: 12vw;\n\t\t\tbottom: 100px;\n\t\t}\n\t}\n}\n\n.lsx-layout-switcher-label {\n\tdisplay: block;\n\tfont-size: 13px;\n\tletter-spacing: 0.5px;\n\tline-height: 1.4;\n\tmargin-bottom: 1rem;\n}\n\n.lsx-layout-switcher-option {\n\tdisplay: inline-block;\n\tfont-size: 28px;\n\tline-height: 1;\n\tpadding: 0 3px;\n\ttransition: color 300ms ease;\n\twhite-space: nowrap;\n}\n\n.lsx-hide-posts-navigation {\n\t.post-navigation {\n\t\tdisplay: none;\n\t}\n}\n\n.single-post .lsx-related-posts .lsx-related-posts-headline {\n\tmargin-top: 8.5rem;\n\tmargin-bottom: 0;\n\ttext-align: center;\n}\n\n.single-post .lsx-related-posts .lsx-related-posts-wrapper {\n\t@include media('>=phone') {\n\t\talign-items: flex-start;\n\t\tdisplay: flex;\n\t\tflex-flow: row wrap;\n\t\tjustify-content: flex-start;\n\t\tmargin-left: -15px;\n\t\tmargin-right: -15px;\n\t}\n\n\tarticle.post,\n\tarticle.page,\n\tarticle.lsx-slot {\n\t\tmargin: 4.25rem 0 0;\n\n\t\t@include media('>=phone') {\n\t\t\tpadding-left: 15px;\n\t\t\tpadding-right: 15px;\n\t\t\twidth: 50%;\n\n\t\t\t.entry-meta,\n\t\t\t.entry-title,\n\t\t\t.entry-summary,\n\t\t\t.entry-content,\n\t\t\t.post-meta-categories {\n\t\t\t\tpadding-left: 2rem;\n\t\t\t\tpadding-right: 2rem;\n\t\t\t}\n\n\t\t\t.post-tags-wrapper {\n\t\t\t\tmargin-top: 1rem;\n\t\t\t\tmargin-left: 20px;\n\t\t\t\tmargin-right: 20px;\n\t\t\t\tpadding-bottom: 0;\n\t\t\t}\n\t\t}\n\n\t\t@include media('>=tablet') {\n\t\t\twidth: 33.3333%;\n\t\t}\n\n\t\t.entry-title {\n\t\t\tfont-size: 22px;\n\t\t}\n\t}\n}\n\n.archive {\n\t&.category,\n\t&.tag {\n\t\t.content-area {\n\t\t\tmargin-bottom: 4.25rem;\n\t\t}\n\t\t.archive-category-title {\n\t\t\tmargin-bottom: 4.25rem;\n\t\t\th2 {\n\t\t\t\tmargin-top: 5px;\n\t\t\t}\n\t\t\ta.back-to-blog {\n\t\t\t\ttext-transform: uppercase;\n\t\t\t\t&:before {\n\t\t\t\t\tcontent: '\\f177';\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\tfont-family: 'FontAwesome';\n\t\t\t\t\tfont-size: inherit;\n\t\t\t\t\tmargin-right: 5px;\n\t\t\t\t\ttext-rendering: auto;\n\n\t\t\t\t\t-webkit-font-smoothing: antialiased;\n\t\t\t\t\t-moz-osx-font-smoothing: grayscale;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n@include customizer-blog-body-colours(#dadddf, #4a4a4a, #418ad0, #f7ae00, #919191);\n@include customizer-blog-banner-colours(#fff);\n\n.lsx-hide-post-category article.lsx-slot .post-meta-categories,\n.lsx-hide-post-category.blog .post-meta-categories,\n.lsx-hide-post-category.archive .post-meta-categories,\n.lsx-hide-post-category.search-results .post-meta-categories,\n.lsx-hide-post-category.single-post .post-meta-categories {\n\tdisplay: none;\n}\n.lsx-hide-post-category article.lsx-slot .entry-layout .post-tags-wrapper > .post-meta-categories,\n.lsx-hide-post-category.blog .entry-layout .post-tags-wrapper > .post-meta-categories,\n.lsx-hide-post-category.archive .entry-layout .post-tags-wrapper > .post-meta-categories,\n.lsx-hide-post-category.search-results .entry-layout .post-tags-wrapper > .post-meta-categories,\n.lsx-hide-post-category.single-post .entry-layout .post-tags-wrapper > .post-meta-categories {\n\tdisplay: none;\n}\n.lsx-hide-post-category\n\tarticle.lsx-slot\n\t.entry-layout\n\t.post-tags-wrapper\n\t> .post-meta-categories\n\t+ .post-comments:before,\n.lsx-hide-post-category.blog\n\t.entry-layout\n\t.post-tags-wrapper\n\t> .post-meta-categories\n\t+ .post-comments:before,\n.lsx-hide-post-category.archive\n\t.entry-layout\n\t.post-tags-wrapper\n\t> .post-meta-categories\n\t+ .post-comments:before,\n.lsx-hide-post-category.search-results\n\t.entry-layout\n\t.post-tags-wrapper\n\t> .post-meta-categories\n\t+ .post-comments:before,\n.lsx-hide-post-category.single-post\n\t.entry-layout\n\t.post-tags-wrapper\n\t> .post-meta-categories\n\t+ .post-comments:before {\n\tdisplay: none;\n}\n.lsx-hide-post-category article.lsx-slot .entry-layout .post-tags-wrapper > .post-tags:before,\n.lsx-hide-post-category.blog .entry-layout .post-tags-wrapper > .post-tags:before,\n.lsx-hide-post-category.archive .entry-layout .post-tags-wrapper > .post-tags:before,\n.lsx-hide-post-category.search-results .entry-layout .post-tags-wrapper > .post-tags:before,\n.lsx-hide-post-category.single-post .entry-layout .post-tags-wrapper > .post-tags:before {\n\tdisplay: none;\n}\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 768px,\n  'tablet': 992px,\n  'desktop': 1200px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","@mixin customizer-blog-link-colour ($color: #418AD0, $hover: #F7AE00) {\n\t&,\n\t&:active,\n\t&:visited {\n\t\tcolor: $color;\n\t}\n\n\t&:hover,\n\t&:hover:active,\n\t&:focus {\n\t\tcolor: $hover;\n\t}\n}\n\n@mixin customizer-blog-body-colours($breaker: #DADDDF, $color: #4A4A4A, $link: #418AD0, $hover: #F7AE00, $small: #919191) {\n\t.widget.lsx-blog-customizer-posts {\n\t\t.lsx-blog-customizer-posts-archive-link {\n\t\t\t&:before,\n\t\t\t&:after {\n\t\t\t\tbackground-color: $breaker;\n\t\t\t}\n\t\t}\n\t}\n\n\t.widget.lsx-blog-customizer-terms {\n\t\t.lsx-blog-customizer-terms-archive-link {\n\t\t\t&:before,\n\t\t\t&:after {\n\t\t\t\tbackground-color: $breaker;\n\t\t\t}\n\t\t}\n\t}\n\n\t.lsx-blog-customizer-posts-wrapper {\n\t\t.post-slot {\n\t\t\t.post-info {\n\t\t\t\t.post-title > a:not(.btn) {\n\t\t\t\t\t@include customizer-blog-link-colour($link, $hover);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.post-meta,\n\t\t\t.post-info { color: $small; }\n\n\t\t\t.post-info a,\n\t\t\t.post-meta a {\n\t\t\t\t@include customizer-blog-link-colour($small, $hover);\n\t\t\t}\n\t\t}\n\t}\n\n\t.lsx-blog-customizer-terms-wrapper {\n\t\t.term-slot {\n\t\t\t.term-title > a:not(.btn) {\n\t\t\t\t@include customizer-blog-link-colour($color, $hover);\n\t\t\t}\n\n\t\t\t.term-content {\n\t\t\t\ta.moretag {\n\t\t\t\t\tbackground-color: $link;\n\t\t\t\t\tcolor: #FFF;\n\n\t\t\t\t\t&:hover {\n\t\t\t\t\t\tbackground-color: $hover;\n\t\t\t\t\t\tcolor: #FFF;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t#categories-slider,\n\t.lsx-blog-customizer-posts-slider,\n\t.lsx-blog-customizer-terms-slider,\n\t.lsx-related-posts-wrapper {\n\t\t.slick-dots {\n\t\t\t& > li {\n\t\t\t\t& > button { border-color: $color; }\n\n\t\t\t\t&.slick-active > button { background-color: $color; }\n\t\t\t}\n\t\t}\n\n\t\t.slick-arrow {\n\t\t\tborder-color: $color;\n\t\t\tcolor: $color;\n\n\t\t\t&:hover {\n\t\t\t\tborder-color: $hover;\n\t\t\t\tcolor: $hover;\n\t\t\t}\n\n\t\t\t&.slick-disabled {\n\t\t\t\tborder-color: $breaker;\n\t\t\t\tcolor: $breaker;\n\t\t\t}\n\t\t}\n\t}\n\n\t.lsx-layout-switcher-option {\n\t\t&:hover { color: $hover; }\n\t\t&.active { color: $hover; }\n\t}\n}\n","@mixin customizer-blog-banner-colours($color-image: #FFF) {\n\t.lsx-layout-switcher-label { color: $color-image; }\n\t.lsx-layout-switcher-option { color: $color-image; }\n\n\t#categories-slider {\n\t\t.item {\n\t\t\t& > a {\n\t\t\t\t& > span { color: $color-image; }\n\t\t\t}\n\t\t}\n\t}\n}\n"]}